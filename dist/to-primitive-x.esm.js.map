{"version":3,"sources":["../src/to-primitive-x.js"],"names":[],"mappings":"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","file":"to-primitive-x.esm.js","sourcesContent":["import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\nconst StringCtr = STRING.constructor;\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\nconst assertHint = function assertHint(hint) {\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  return hint;\n};\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n  assertHint(hint);\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  let method;\n  let result;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      result = method.call(ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\nconst evalExotic = function evalExotic(obj) {\n  const {exoticToPrim, input, hint} = obj;\n  const result = exoticToPrim.call(input, hint);\n\n  if (isPrimitive(result)) {\n    return result;\n  }\n\n  throw new TypeError('unable to convert exotic object to primitive');\n};\n\nconst evalPrimitive = function evalPrimitive(input, hint) {\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {Function} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nconst toPrimitive = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  return typeof exoticToPrim === 'undefined' ? evalPrimitive(input, hint) : evalExotic({exoticToPrim, input, hint});\n};\n\nexport default toPrimitive;\n"]}